<?php
/**
 * Script de v√©rification de l'√©tat de la base de donn√©es
 * Utile pour diagnostiquer les probl√®mes d'authentification
 */

require_once 'database.php';
require_once 'config/config.php';

header('Content-Type: text/plain; charset=utf-8');

echo "=== V√©rification du syst√®me d'authentification SQLite ===\n\n";

try {
    global $userDB;
    
    // V√©rifier la connexion √† la base
    echo "‚úÖ Connexion √† la base de donn√©es : OK\n";
    
    // V√©rifier le chemin de la base
    echo "üìÅ Chemin de la base : " . DB_PATH . "\n";
    echo "üìä Taille du fichier : " . (file_exists(DB_PATH) ? filesize(DB_PATH) . " bytes" : "Fichier non trouv√©") . "\n";
    
    // Lister tous les utilisateurs
    $users = $userDB->getAllUsers();
    echo "\nüë• Utilisateurs dans la base (" . count($users) . ") :\n";
    echo str_repeat("-", 80) . "\n";
    printf("%-15s %-10s %-10s %-20s %-20s\n", "USERNAME", "ROLE", "STATUS", "CREATED", "LAST LOGIN");
    echo str_repeat("-", 80) . "\n";
    
    foreach ($users as $user) {
        printf("%-15s %-10s %-10s %-20s %-20s\n", 
            $user['username'],
            $user['role'],
            $user['is_active'] ? 'Actif' : 'Inactif',
            date('d/m/Y H:i', strtotime($user['created_at'])),
            $user['last_login'] ? date('d/m/Y H:i', strtotime($user['last_login'])) : 'Jamais'
        );
    }
    
    // Informations sur la configuration
    echo "\n‚öôÔ∏è  Configuration :\n";
    echo "   Timeout de session : " . SESSION_TIMEOUT . " secondes (" . (SESSION_TIMEOUT/60) . " minutes)\n";
    echo "   Nom de l'application : " . APP_NAME . "\n";
    
    // V√©rifications de s√©curit√©
    echo "\nüõ°Ô∏è  V√©rifications de s√©curit√© :\n";
    
    // V√©rifier les permissions du fichier de base
    if (file_exists(DB_PATH)) {
        $perms = fileperms(DB_PATH);
        echo "   Permissions base de donn√©es : " . sprintf('%o', $perms & 0777) . "\n";
        
        if (is_readable(DB_PATH)) {
            echo "   ‚úÖ Base de donn√©es lisible\n";
        } else {
            echo "   ‚ùå Base de donn√©es non lisible\n";
        }
        
        if (is_writable(DB_PATH)) {
            echo "   ‚úÖ Base de donn√©es modifiable\n";
        } else {
            echo "   ‚ùå Base de donn√©es non modifiable\n";
        }
    }
    
    // V√©rifier les extensions PHP
    $extensions = ['pdo', 'pdo_sqlite', 'session', 'hash'];
    echo "\nüîß Extensions PHP :\n";
    foreach ($extensions as $ext) {
        echo "   " . (extension_loaded($ext) ? "‚úÖ" : "‚ùå") . " $ext\n";
    }
    
    // Statistiques
    echo "\nüìà Statistiques :\n";
    $activeUsers = array_filter($users, function($u) { return $u['is_active']; });
    $adminUsers = array_filter($users, function($u) { return $u['role'] === 'admin'; });
    
    echo "   Total utilisateurs : " . count($users) . "\n";
    echo "   Utilisateurs actifs : " . count($activeUsers) . "\n";
    echo "   Administrateurs : " . count($adminUsers) . "\n";
    
    // Utilisateurs avec derni√®re connexion r√©cente (7 jours)
    $recentLogins = array_filter($users, function($u) {
        return $u['last_login'] && (time() - strtotime($u['last_login'])) < 7*24*3600;
    });
    echo "   Connexions r√©centes (7j) : " . count($recentLogins) . "\n";
    
} catch (Exception $e) {
    echo "‚ùå Erreur : " . $e->getMessage() . "\n";
    echo "\nActions recommand√©es :\n";
    echo "1. V√©rifiez que le dossier data/ existe et est accessible en √©criture\n";
    echo "2. Ex√©cutez install.php pour r√©initialiser la base\n";
    echo "3. V√©rifiez les extensions PHP requises\n";
}

echo "\n=== Fin de la v√©rification ===\n";
?>
